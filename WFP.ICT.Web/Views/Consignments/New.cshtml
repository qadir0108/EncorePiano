@model WFP.ICT.Web.Models.ConsigmentVm
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- BEGIN CONTENT -->
<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <!-- BEGIN PAGE HEAD-->
        <div class="page-head">
            <!-- BEGIN PAGE TITLE -->
            <div class="page-title">
                <h1>
                    New Consignment
                    <small></small>
                </h1>
            </div>
            <!-- END PAGE TITLE -->
        </div>
        <!-- END PAGE HEAD-->
        <!-- BEGIN PAGE BREADCRUMB -->
        <ul class="page-breadcrumb breadcrumb">
            <li>
                <a href="index.html">Home</a>
                <i class="fa fa-circle"></i>
            </li>
            <li>
                <span class="active">New Consignment</span>
            </li>
        </ul>
        <!-- END PAGE BREADCRUMB -->
        @if (TempData["Success"] != null)
            {
            <div class="custom-alerts alert alert-success fade in">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true"></button>
                <i class="fa-lg fa fa-check"></i>@TempData["Success"]
            </div>
        }
        @if (TempData["Error"] != null)
            {
            <div class="custom-alerts alert alert-danger fade in">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true"></button>
                <i class="fa-lg fa fa-warning"></i>@TempData["Error"]
            </div>
        }
        <!-- BEGIN PAGE BASE CONTENT -->
        <div class="row">
            <div class="col-md-12 ">
                <!-- BEGIN SAMPLE FORM PORTLET-->
                @using (Html.BeginForm("New", "Consignments", FormMethod.Post, new
                { @*@data_toggle = "validator",*@ @id = "frm"
                }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="Paths" name="Paths"/>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="portlet light bordered">
                                <!-- box purple-->
                                <div class="portlet-title">
                                    <div class="caption font-red-sunglo">
                                        <span class="caption-subject bold uppercase"> Consignment</span>
                                    </div>
                                    <div class="actions">
                                        <a class="btn btn-circle btn-icon-only blue" href="javascript:;">
                                            <i class="icon-cloud-upload"></i>
                                        </a>
                                        <a class="btn btn-circle btn-icon-only green" href="javascript:;">
                                            <i class="icon-wrench"></i>
                                        </a>
                                        <a class="btn btn-circle btn-icon-only red" href="javascript:;">
                                            <i class="icon-trash"></i>
                                        </a>
                                        <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""> </a>
                                    </div>
                                </div>
                                <div class="portlet-body form">
                                    <div class="form-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group form-md-line-input has-success">
                                                    <div class="input-icon">
                                                        @Html.DropDownList("Warehouses", null, htmlAttributes: new { @class = "form-control" }) 
                                                        <label for="form_control_1">Warehouse<span class="required">*</span></label>
                                                        <span class="help-block">Select Warehouse</span>
                                                        <i class="fa fa-envelope-o"></i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group form-md-line-input has-success">
                                                    <div class="input-icon">
                                                        @Html.DropDownList("Drivers", null, htmlAttributes: new { @class = "form-control" })
                                                        <label for="form_control_1">Driver<span class="required">*</span></label>
                                                        <span class="help-block">Select Driver</span>
                                                        <i class="fa fa-envelope-o"></i>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                        </div>
                                        <div class="row" style="margin-bottom: 10px">
                                            <div class="col-md-6">
                                                <div class="form-group form-md-line-input has-success">
                                                    <div class="input-icon">
                                                        @Html.DropDownList("Vehicles", null, htmlAttributes: new { @class = "form-control" })
                                                        <label for="form_control_1">Vehicle<span class="required">*</span></label>
                                                        <span class="help-block">Select Vehicle</span>
                                                        <i class="fa fa-envelope"></i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group form-md-line-input has-success">
                                                    <div class="input-icon">
                                                        @Html.DropDownList("Orders", null, htmlAttributes: new { @class = "form-control" })
                                                        <label for="form_control_1">Order Number<span class="required">*</span></label>
                                                        <span class="help-block">Selcet Order</span>
                                                    </div>
                                                </div>
                                            </div>
                                           
                                        </div>
                                        
                                        <div class="row">
                                            <div class="col-md-6">
                                                <h3>Pickup Address</h3>
                                                <div id="pickupAddress"></div>
                                            </div>
                                            <div class="col-md-6">
                                                <h3>Delivery Address</h3>
                                                <div id="deliveryAddress"></div>
                                            </div>

                                        </div>

                                    </div>
                                    <div class="form-actions noborder">
                                        <button type="submit" class="btn blue-steel " id="btnCreate">Create</button>
                                        <button type="button" class="btn c-btn-border-1x c-btn-blue-steel">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- MAP -->
                        <div class="col-md-6">
                            @{
                                Html.RenderPartial("Map");
                            }
                        </div>
                    </div>
                    
                }
                <!-- END SAMPLE FORM PORTLET-->
            </div>

        </div>

        <!-- END PAGE BASE CONTENT -->
    </div>
    <!-- END CONTENT BODY -->
</div>
<!-- END CONTENT -->

<script type="text/javascript">

    var wfp = wfp || {};

    $(function () {

        $('#Orders').select2().on("change", function (e) {
            //debugger;
            if ($(this).val() === '') return;

            var orderId = $(this).val();

            var dataToPost = {
                Id: orderId
            };

            $.ajax({
                type: "POST",
                url: "/Consignments/GetOrderDetails",
                data: dataToPost,
                success: function (response) {
                    //debugger;

                    if (response.IsSucess) {
                        var pickupAddress = $("#pickupAddress");
                        var deliveryAddress = $("#deliveryAddress");
                        var result = $.parseJSON(response.Result);
                        pickupAddress.html(result.PickupAddressString);
                        deliveryAddress.html(result.DeliveryAddressString);
                        wfp.restTooltips();
                        pickupAddress.hide().fadeIn(1000).animate({ "opacity": "100" });
                        deliveryAddress.hide().fadeIn(1000).animate({ "opacity": "100" });
                        initMap(result.PickupAddressString, result.DeliveryAddressString);
                    } else {
                        wfp.showError(response.ErrorMessage);
                    }
                },
                failure: function (response) {
                    wfp.showError('There is erorr in service call.');
                },
                complete: function () {
                }
            });
        });

        var FormValidationMd = function () {

            var handleValidation1 = function () {
                // for more info visit the official plugin documentation: 
                // http://docs.jquery.com/Plugins/Validation
                var form1 = $('#frm');
                var error1 = $('.alert-danger', form1);
                var success1 = $('.alert-success', form1);

                form1.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-block help-block-error', // default input error message class
                    focusInvalid: false, // do not focus the last invalid input
                    ignore: "", // validate all fields including form hidden input
                    messages: {
                    },
                    rules: {
                        Warehouses: {
                            required: true
                        },
                        Drivers: {
                            required: true
                        },
                        Vehicles: {
                            required: true
                        },
                        Orders: {
                            required: true
                        }
                    },

                    invalidHandler: function (event, validator) { //display error alert on form submit              
                        success1.hide();
                        error1.show();
                        App.scrollTo(error1, -200);
                    },

                    errorPlacement: function (error, element) {
                        if (element.is(':checkbox')) {
                            error.insertAfter(element.closest(".md-checkbox-list, .md-checkbox-inline, .checkbox-list, .checkbox-inline"));
                        } else if (element.is(':radio')) {
                            error.insertAfter(element.closest(".md-radio-list, .md-radio-inline, .radio-list,.radio-inline"));
                        } else {
                            error.insertAfter(element); // for other inputs, just perform default behavior
                        }
                    },

                    highlight: function (element) { // hightlight error inputs
                        $(element)
                            .closest('.form-group').addClass('has-error'); // set error class to the control group
                    },

                    unhighlight: function (element) { // revert the change done by hightlight
                        $(element)
                            .closest('.form-group').removeClass('has-error'); // set error class to the control group
                    },

                    success: function (label) {
                        label
                            .closest('.form-group').removeClass('has-error'); // set success class to the control group
                    },

                    submitHandler: function (form) {
                        //debugger;
                        form.submit();
                    }
                });
            }

            return {
                init: function () {
                    handleValidation1();
                }
            };
        }();

        FormValidationMd.init();

        //$('#btnCreate1').click(function (e) {
        //    debugger;
        //    e.preventDefault();

        //    if ($('#Warehouses').val().trim() === '') {
        //        wfp.showError("Warehouse can not be empty");
        //        return false;
        //    }
        //    if ($('#Drivers').val().trim() === '') {
        //        wfp.showError("Driver can not be empty");
        //        return false;
        //    }
        //    if ($('#Vehicles').val().trim() === '') {
        //        wfp.showError("Vehicle can not be empty");
        //        return false;
        //    }
        //    if ($('#Orders').val().trim() === '') {
        //        wfp.showError("Order can not be empty");
        //        return false;
        //    }
            
        //    var dataToPost = {
        //        OrderId: $("#Orders").find('option:selected').val(),
        //        WarehouseId: $("#Warehouses").find('option:selected').val(),
        //        VehicleId: $("#Vehicles").find('option:selected').val(),
        //        DriverId: $("#Drivers").find('option:selected').val(),
        //        Paths: paths
        //    };

        //    $.ajax({
        //        type: "POST",
        //        url: "/Consignments/New",
        //        data: dataToPost,
        //        success: function (response) {
        //            //debugger;

        //            if (response.IsSucess) {
        //                wfp.showSuccess('Consignment has been created successfully.');
        //                wfp.redirectTo('/Consignments/Index');
        //            } else {
        //                wfp.showError(response.ErrorMessage);
        //            }
        //        },
        //        failure: function (response) {
        //            wfp.showError('There is erorr in service call.');
        //        },
        //        complete: function () {
        //        }
        //    });

        //});
    });

</script>

