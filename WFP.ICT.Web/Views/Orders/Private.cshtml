@using System.Collections
@using MyToolkit.Html
@model WFP.ICT.Web.Models.OrderVm
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

</style>

<link href="~/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" />
<!-- BEGIN CONTENT -->

<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <!-- BEGIN PAGE BASE CONTENT -->
        <div class="row">
            <div class="col-md-12 ">
                <!-- BEGIN SAMPLE FORM PORTLET-->

                @using (Ajax.BeginForm("Save", "Orders", null, new AjaxOptions { HttpMethod = "POST", OnBegin = "return false" }, new
                {
                    @id = "frm",
                    @enctype = "multipart/form-data"
                }))
                {
                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.OrderNumber)
                    <div class="portlet light bordered">
                        <!-- box purple-->
                        <div class="portlet-title">
                            <div class="caption font-red-sunglo">
                                <span class="caption-subject bold uppercase"> @(string.IsNullOrEmpty(Model.Id) ? "New" : "Edit") Move Order</span>
                            </div>
                            <div class="actions">
                                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""> </a>
                            </div>
                        </div>

                        <div class="portlet-body form">
                            <div class="form-body">
                                <div class="tabbable-line">
                                    <ul class="nav nav-tabs ">
                                        <li class="active">
                                            <a href="#tab_15_1" data-toggle="tab"> Details </a>
                                        </li>
                                        <li>
                                            <a href="#tab_15_2" data-toggle="tab"> Units </a>
                                        </li>
                                        <li>
                                            <a href="#tab_15_3" data-toggle="tab"> Charges </a>
                                        </li>
                                        @if (Model.OrderPlacementType == (int)WFP.ICT.Enums.OrderTypeEnum.Dealer
                    || Model.OrderPlacementType == (int)WFP.ICT.Enums.OrderTypeEnum.Manufacturer)
                                        {
                                            <li>
                                                <a href="#tab_15_4" data-toggle="tab"> Billing/Invoice </a>
                                            </li>
                                        }
                                    </ul>
                                    <div class="tab-content">
                                        <div class="tab-pane active" id="tab_15_1">
                                            <div class="row">
                                                <div class="col-md-12">


                                                    <div class="col-md-4">
                                                        <div class="form-group form-md-line-input has-success">
                                                            <div class="input-icon">
                                                                @Html.EditorFor(model => model.CallerFirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                                <label>First Name</label>
                                                                @Html.ValidationMessageFor(model => model.CallerFirstName, null, new { @class = "help-block help-block-error" })
                                                                <span class="help-block">Enter First Name</span>
                                                                <i class="fa fa-user"></i>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="form-group form-md-line-input has-success">
                                                            <div class="input-icon">
                                                                @Html.EditorFor(model => model.CallerLastName, new { htmlAttributes = new { @class = "form-control" } })
                                                                <label>Last Name<span class="required">*</span></label>
                                                                @Html.ValidationMessageFor(model => model.CallerLastName, null, new { @class = "help-block help-block-error" })
                                                                <span class="help-block">Enter Last Name</span>
                                                                <i class="fa fa-user"></i>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="form-group form-md-line-input has-success">
                                                            <div class="input-icon">
                                                                @Html.EditorFor(model => model.CallerPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                                <label>Via Phone Number<span class="required">*</span></label>
                                                                @Html.ValidationMessageFor(model => model.CallerPhoneNumber, null, new { @class = "help-block help-block-error" })
                                                                <span class="help-block">Enter Phone Number</span>
                                                                <i class="fa fa-phone"></i>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="col-md-4">
                                                        <div class="form-group form-md-line-input has-success">
                                                            <div class="input-icon">
                                                                @Html.EditorFor(model => model.CallerAlternatePhone, new { htmlAttributes = new { @class = "form-control" } })
                                                                <label>Alternate Phone Number<span class="required">*</span></label>
                                                                @Html.ValidationMessageFor(model => model.CallerAlternatePhone, null, new { @class = "help-block help-block-error" })
                                                                <span class="help-block">Enter Alternate Number</span>
                                                                <i class="fa fa-phone"></i>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-8">
                                                        <div class="form-group form-md-line-input has-success">
                                                            <div class="input-icon">
                                                                @Html.EditorFor(model => model.CallerEmail, new { htmlAttributes = new { @class = "form-control" } })
                                                                <label>Via Email Address<span class="required">*</span></label>
                                                                @Html.ValidationMessageFor(model => model.CallerEmail, null, new { @class = "help-block help-block-error" })                                                                <span class="help-block">Enter Email Address</span>
                                                                <span class="help-block">Enter Email Address</span>
                                                                <i class="fa fa-envelope-o"></i>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Pickup Delivery -->
                                            <div class="row" style="margin-top: 5px">
                                                <div class="col-md-6">

                                                    <div class="portlet light bordered">
                                                        <div class="portlet-title">
                                                            <div class="caption font-blue-steel">
                                                                <i class="icon-settings font-blue-steel"></i>
                                                                <span class="caption-subject bold uppercase"> Pickup Adddress</span>
                                                            </div>
                                                            <div class="actions">
                                                                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""> </a>
                                                            </div>
                                                        </div>
                                                        <div class="portlet-body form">
                                                            <div class="form-body">
                                                                <!--Pickup Address-->
                                                                <div class="row">
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.PickUpDate, new { htmlAttributes = new { @class = "form-control date-picker" } })
                                                                                <label>Pickup Date<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.PickupAddress.PickUpDate, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Pickup Date here</span>
                                                                                <i class="fa fa-user"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.DropDownListFor(model => model.PickupAddress.Warehouse, TempData["Warehouses"] as SelectList, null, htmlAttributes: new { @class = "form-control", onchange = "pianoConfigs.initPopulateWarehouse(this)" })
                                                                                <label>Warehouse</label>
                                                                                @Html.ValidationMessageFor(model => model.PickupAddress.Warehouse, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Warehouse here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="row">
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.Name, new { htmlAttributes = new { @class = "form-control pianoName" } })
                                                                                <label>Name<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.PickupAddress.Name, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Name here</span>
                                                                                <i class="fa fa-user"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.PhoneNumber, new { htmlAttributes = new { @class = "form-control pianoPhone" } })
                                                                                <label>Contact<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.PickupAddress.PhoneNumber, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Phone here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.AlternateContact, new { htmlAttributes = new { @class = "form-control pianoAltName" } })
                                                                                <label>Alternate Contact</label>
                                                                                <span class="help-block">Enter Alternate Contact here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.AlternatePhone, new { htmlAttributes = new { @class = "form-control pianoAltPhone" } })
                                                                                <label>Alternate Phone</label>
                                                                                <span class="help-block">Enter Alternate Phone here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.Address1, new { htmlAttributes = new { @class = "form-control pianoAddress" } })
                                                                                <label>Address<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.PickupAddress.Address1, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Address here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-3">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.City, new { htmlAttributes = new { @class = "form-control pianoCity" } })
                                                                                <label>City<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.PickupAddress.City, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter PostCode</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.PostCode, new { htmlAttributes = new { @class = "form-control pianoPostCode" } })
                                                                                <label>Zip Code<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.PickupAddress.PostCode, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Zip Code</span>
                                                                                <i class="fa fa-phone"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.DropDownListFor(model => model.PickupAddress.State, TempData["AddressStates"] as SelectList, htmlAttributes: new { @class = "form-control pianoState" })
                                                                                <label>State <span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.PickupAddress.State, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter City Number here</span>
                                                                                <i class="fa fa-phone"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.Stairs, new { htmlAttributes = new { @class = "form-control pianoStairs" } })
                                                                                <label>Stairs</label>
                                                                                <span class="help-block">Enter  Stairs here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.Turns, new { htmlAttributes = new { @class = "form-control pianoTurns" } })
                                                                                <label>Turns</label>
                                                                                <span class="help-block">Enter Turns here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                </div>

                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.PickupAddress.Notes, new { htmlAttributes = new { @class = "form-control pianoNotes" } })
                                                                                <label>Instructions</label>
                                                                                <span class="help-block">Enter Instructions Here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>


                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <!--Delivery Address-->
                                                    <div class="portlet light bordered">
                                                        <div class="portlet-title">
                                                            <div class="caption font-blue-steel">
                                                                <i class="icon-settings font-blue-steel"></i>
                                                                <span class="caption-subject bold uppercase"> Delivery Adddress</span>
                                                            </div>
                                                            <div class="actions">
                                                                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""> </a>
                                                            </div>
                                                        </div>

                                                        <div class="portlet-body form">
                                                            <div class="form-body">
                                                                <!--Pickup Address-->
                                                                <div class="row">
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.PickUpDate, new { htmlAttributes = new { @class = "form-control date-picker" } })
                                                                                <label>Delivery Date<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.DeliveryAddress.PickUpDate, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Delivery Date here</span>
                                                                                <i class="fa fa-user"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.DropDownListFor(model => model.DeliveryAddress.Warehouse, TempData["Warehouses"] as SelectList, null, htmlAttributes: new { @class = "form-control", onchange = "pianoConfigs.initPopulateWarehouse(this)" })
                                                                                <label>Warehouse</label>
                                                                                @Html.ValidationMessageFor(model => model.DeliveryAddress.Warehouse, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Warehouse here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="row">
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.Name, new { htmlAttributes = new { @class = "form-control pianoName" } })
                                                                                <label>Name<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.DeliveryAddress.Name, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Name here</span>
                                                                                <i class="fa fa-user"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.PhoneNumber, new { htmlAttributes = new { @class = "form-control pianoPhone" } })
                                                                                <label>Contact<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.DeliveryAddress.PhoneNumber, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Phone here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.AlternateContact, new { htmlAttributes = new { @class = "form-control pianoAltName" } })
                                                                                <label>Alternate Contact</label>
                                                                                <span class="help-block">Enter Alternate Contact here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.AlternatePhone, new { htmlAttributes = new { @class = "form-control pianoAltPhone" } })
                                                                                <label>Alternate Phone</label>
                                                                                <span class="help-block">Enter Alternate Phone here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.Address1, new { htmlAttributes = new { @class = "form-control pianoAddress" } })
                                                                                <label>Address<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.DeliveryAddress.Address1, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Address here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-3">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.City, new { htmlAttributes = new { @class = "form-control pianoCity" } })
                                                                                <label>City<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.DeliveryAddress.City, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter PostCode</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.PostCode, new { htmlAttributes = new { @class = "form-control pianoPostCode" } })
                                                                                <label>Zip Code<span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.DeliveryAddress.PostCode, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter Zip Code</span>
                                                                                <i class="fa fa-phone"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.DropDownListFor(model => model.DeliveryAddress.State, TempData["AddressStates"] as SelectList, htmlAttributes: new { @class = "form-control pianoState" })
                                                                                <label>State <span class="required">*</span></label>
                                                                                @Html.ValidationMessageFor(model => model.DeliveryAddress.State, null, new { @class = "help-block help-block-error" })
                                                                                <span class="help-block">Enter City Number here</span>
                                                                                <i class="fa fa-phone"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.Stairs, new { htmlAttributes = new { @class = "form-control pianoStairs" } })
                                                                                <label>Stairs</label>
                                                                                <span class="help-block">Enter  Stairs here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.Turns, new { htmlAttributes = new { @class = "form-control pianoTurns" } })
                                                                                <label>Turns</label>
                                                                                <span class="help-block">Enter Turns here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                </div>

                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <div class="form-group form-md-line-input has-success">
                                                                            <div class="input-icon">
                                                                                @Html.EditorFor(model => model.DeliveryAddress.Notes, new { htmlAttributes = new { @class = "form-control pianoNotes" } })
                                                                                <label>Instructions</label>
                                                                                <span class="help-block">Enter Instructions Here</span>
                                                                                <i class="fa fa-home"></i>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>


                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                            @if (Model.OrderPlacementType == (int)WFP.ICT.Enums.OrderTypeEnum.Dealer
                                                || Model.OrderPlacementType == (int)WFP.ICT.Enums.OrderTypeEnum.Manufacturer)
                                            {
                                                <div class="row">
                                                    <div class="col-md-12">

                                                        <div class="portlet light bordered">
                                                            <div class="portlet-title">
                                                                <div class="caption font-blue-steel">
                                                                    <i class="icon-settings font-blue-steel"></i>
                                                                    <span class="caption-subject bold uppercase">Delivery Reciept</span>
                                                                </div>
                                                                <div class="actions">
                                                                    <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""> </a>
                                                                </div>
                                                            </div>
                                                            <div class="portlet-body form">
                                                                <div class="form-body">
                                                                    <!--Pickup Address-->
                                                                    <div class="row">
                                                                        <div class="col-md-6">
                                                                            <div class="fileinput fileinput-new" data-provides="fileinput">
                                                                                <div class="input-group input-large">
                                                                                    <div class="form-control uneditable-input input-fixed input-medium" data-trigger="fileinput">
                                                                                        <i class="fa fa-file fileinput-exists"></i>&nbsp;
                                                                                        <span class="fileinput-filename"></span>
                                                                                    </div>
                                                                                    <span class="input-group-addon btn default btn-file">
                                                                                        <span class="fileinput-new"> Select file </span>
                                                                                        <span class="fileinput-exists"> Change </span>
                                                                                        <input type="hidden" value="" name="...">
                                                                                        <input id="linkFile" type="file" value="@Model.DeliverForm" name="">
                                                                                    </span>
                                                                                    <a href="javascript:;" class="input-group-addon btn red fileinput-exists" data-dismiss="fileinput"> Remove </a>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        @if (Model.DeliverForm != null)
                                                                        {
                                                                            <div class="col-md-3">
                                                                                <a href="~/Orders/Download/@Model.DeliverForm" class="btn btn-default">Download</a>
                                                                            </div>
                                                                        }

                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                            }

                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="col-md-6">
                                                        <div class="form-group form-md-line-input has-success">
                                                            <div class="input-icon">
                                                                @Html.DropDownListFor(model => model.Shuttle, TempData["Customers"] as SelectList, htmlAttributes: new { @class = "form-control" })
                                                                <label>Shuttle</label>
                                                                <span class="help-block">Enter Shuttle Here</span>
                                                                <i class="fa fa-home"></i>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>


                                        <div class="tab-pane" id="tab_15_2">
                                            <div class="row">
                                                <div class="col-md-2 pull-right">
                                                    <div class="col-md-12">
                                                        <a id="addPiano" class="btn btn-circle btn-icon-only green pull-right" data-tooltip="Add more piano" title="Add more piano" href="javascript:;">
                                                            <i class="icon-plus"></i>
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>

                                            <div id="pianoContainer">
                                                @{Model.Pianos.ForEach(piano => Html.RenderPartial("Editors/_Piano", piano));}
                                            </div>
                                        </div>

                                        <div class="tab-pane" id="tab_15_3">
                                            <!-- Services -->
                                            <div class="row" style="margin-top: 5px">
                                                <div class="col-md-12">

                                                    <div class="portlet light bordered">
                                                        <div class="portlet-title">
                                                            <div class="caption font-blue-steel">
                                                                <i class="icon-settings font-blue-steel"></i>
                                                                <span class="caption-subject bold uppercase"> Other Services</span>
                                                            </div>
                                                            <div class="actions">
                                                                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""> </a>
                                                            </div>
                                                        </div>
                                                        <div class="portlet-body form">

                                                            <div class="row">
                                                                <div class="col-md-2 pull-right">
                                                                    <a id="addServices" class="btn btn-circle btn-icon-only green pull-right" data-tooltip="Add more Service" title="Add more service" href="javascript:;">
                                                                        <i class="icon-plus"></i>
                                                                    </a>
                                                                </div>

                                                            </div>
                                                            <div class="form-body" id="serviceContainer">
                                                                <!--Services-->
                                                                @{Model.Charges.ForEach(service => Html.RenderPartial("Editors/_Services", service));}

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            @if (Model.OrderPlacementType == (int)WFP.ICT.Enums.OrderTypeEnum.Private)
                                            {
                                                <div class="row" style="margin-top: 5px">
                                                    <div class="col-md-12">
                                                        <div class="col-md-6">
                                                            <div class="form-group form-md-line-input has-success">
                                                                <div class="input-icon">
                                                                    @Html.DropDownListFor(model => model.PaymentOption, TempData["PaymentOption"] as SelectList, htmlAttributes: new { @class = "form-control paymentOption", onchange = "pianoConfigs.initShowPaymentData(this)" })
                                                                    <label>Payment Option<span class="required">*</span></label>
                                                                    @Html.ValidationMessageFor(model => model.PaymentOption, null, new { @class = "help-block help-block-error" })
                                                                    <span class="help-block">Select Payment Option</span>
                                                                    <i class="fa fa-dollar"></i>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 amountDetails ignore" style="display:none">
                                                        <div class="col-md-6">
                                                            <div class="form-group form-md-line-input has-success">
                                                                <div class="input-icon">
                                                                    @Html.EditorFor(model => model.CollectableAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                                    <label>Amount to be collected<span class="required">*</span></label>
                                                                    @Html.ValidationMessageFor(model => model.CollectableAmount, null, new { @class = "help-block help-block-error" })
                                                                    <span class="help-block">COD (Amount to be collected)</span>
                                                                    <i class="fa fa-dollar"></i>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 staffDetails ignore" style="display:none">
                                                        <div class="col-md-6">
                                                            <div class="form-group form-md-line-input has-success">
                                                                <div class="input-icon">
                                                                    @Html.EditorFor(model => model.OfficeStaffDetails, new { htmlAttributes = new { @class = "form-control" } })
                                                                    <label>Office Staff<span class="required">*</span></label>
                                                                    @Html.ValidationMessageFor(model => model.OfficeStaffDetails, null, new { @class = "help-block help-block-error" })
                                                                    <span class="help-block">Enter Office Staff Details</span>

                                                                    <i class="fa fa-dollar"></i>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 paymentDetails ignore" style="display:none">
                                                        <div class="col-md-6">
                                                            <div class="form-group form-md-line-input has-success">
                                                                <div class="input-icon">
                                                                    @Html.EditorFor(model => model.OnlinePaymentDetails, new { htmlAttributes = new { @class = "form-control" } })
                                                                    <label>Online Payment<span class="required">*</span></label>
                                                                    @Html.ValidationMessageFor(model => model.OnlinePaymentDetails, null, new { @class = "help-block help-block-error" })
                                                                    <span class="help-block">Enter Online Payment Details</span>
                                                                    <i class="fa fa-dollar"></i>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }

                                        </div>
                                        @if (Model.OrderPlacementType == (int)WFP.ICT.Enums.OrderTypeEnum.Dealer
                   || Model.OrderPlacementType == (int)WFP.ICT.Enums.OrderTypeEnum.Manufacturer)
                                        {
                                            <div class="tab-pane" id="tab_15_4">
                                                <div class="row" style="margin-top: 5px">
                                                    <div class="col-md-12">

                                                        <div class="portlet light bordered">
                                                            <div class="portlet-title">
                                                                <div class="caption font-blue-steel">
                                                                    <i class="icon-settings font-blue-steel"></i>
                                                                    <span class="caption-subject bold uppercase"> Billing</span>
                                                                </div>
                                                                <div class="actions">
                                                                    <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""> </a>
                                                                </div>
                                                            </div>
                                                            <div class="portlet-body form">
                                                                <div class="form-body">
                                                                    <div class="row" style="margin-top:5px;">
                                                                        <div>
                                                                            <div class="col-md-3">
                                                                                <div class="form-group form-md-line-input has-success">
                                                                                    @Html.DropDownListFor(model => model.Dealer, TempData["Customers"] as SelectList, null, htmlAttributes: new { @class = "form-control", onchange = "pianoConfigs.initPopulateDealerCustomer(this)" })
                                                                                    @Html.ValidationMessageFor(model => model.Dealer, null, new { @class = "help-block help-block-error" })
                                                                                    <label>Dealer<span class="required">*</span></label>
                                                                                    <span class="help-block">Select Dealer here</span>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-md-3">
                                                                                <div class="form-group form-md-line-input has-success">
                                                                                    <div class="input-icon">
                                                                                        @Html.TextBox("CustomerName", null, new { @class = "form-control customerName", @readonly = "readonly" })
                                                                                        <label for="form_control_1">Name</label>
                                                                                        <i class="fa fa-user"></i>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-md-3">
                                                                                <div class="form-group form-md-line-input has-success">
                                                                                    <div class="input-icon">
                                                                                        @Html.TextBox("CustomerContact", null, new { @class = "form-control customerContact", @readonly = "readonly" })
                                                                                        <label>Contact </label>
                                                                                        <i class="fa fa-user"></i>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-md-3">
                                                                                <div class="form-group form-md-line-input has-success">
                                                                                    <div class="input-icon">
                                                                                        @Html.TextBox("CustomerAddress", null, new { @class = "form-control customerAddress", @readonly = "readonly" })
                                                                                        <label>Address </label>
                                                                                        <i class="fa fa-user"></i>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-12">
                                                                            <div class="form-group form-md-checkboxes">
                                                                                <div class="md-checkbox-list">
                                                                                    <div class="md-checkbox">
                                                                                        @Html.CheckBoxFor(model => model.IsBilledThirdParty, new { @class = "md-check", @id = "thirdPartyCheck" })

                                                                                        <label for="thirdPartyCheck">
                                                                                            <span></span>
                                                                                            <span class="check"></span>
                                                                                            <span class="box"></span> Bill to third party
                                                                                        </label>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div>
                                                                            <div class="col-md-3">
                                                                                <div class="form-group form-md-line-input has-success">
                                                                                    @Html.DropDownListFor(model => model.ThirdParty, TempData["Customers"] as SelectList, null, new { @class = "form-control", onchange = "pianoConfigs.initPopulateDealerCustomer(this)" })
                                                                                    <label>Select Billing Party<span class="required">*</span></label>
                                                                                    <span class="help-block">Select Dealer here</span>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-md-3">
                                                                                <div class="form-group form-md-line-input has-success">
                                                                                    <div class="input-icon">
                                                                                        @Html.TextBox("CustomerName", null, new { @class = "form-control customerName", @readonly = "readonly" })
                                                                                        <label>Name </label>
                                                                                        <i class="fa fa-user"></i>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-md-3">
                                                                                <div class="form-group form-md-line-input has-success">
                                                                                    <div class="input-icon">
                                                                                        @Html.TextBox("CustomerContact", null, new { @class = "form-control customerContact", @readonly = "readonly" })
                                                                                        <label>Contact </label>
                                                                                        <i class="fa fa-user"></i>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-md-3">
                                                                                <div class="form-group form-md-line-input has-success">
                                                                                    <div class="input-icon">
                                                                                        @Html.TextBox("CustomerAddress", null, new { @class = "form-control customerAddress", @readonly = "readonly" })
                                                                                        <label>Address </label>
                                                                                        <i class="fa fa-user"></i>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-3">
                                                                            <div class="form-group form-md-line-input has-success">
                                                                                <div class="input-icon">
                                                                                    @Html.EditorFor(model => model.SalesOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                                                    <label>Sales Order Number<span class="required">*</span></label>
                                                                                    @Html.ValidationMessageFor(model => model.SalesOrderNumber, null, new { @class = "help-block help-block-error" })
                                                                                    <span class="help-block">Enter Sales Order Number</span>

                                                                                    <i class="fa fa-dollar"></i>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-3">
                                                                            <div class="form-group form-md-line-input has-success">
                                                                                <div class="input-icon">
                                                                                    @Html.EditorFor(model => model.CollectableAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                                                    <label>Amount to be collected<span class="required">*</span></label>
                                                                                    @Html.ValidationMessageFor(model => model.CollectableAmount, null, new { @class = "help-block help-block-error" })
                                                                                    <span class="help-block">COD(Amount to be collected)</span>
                                                                                    <i class="fa fa-dollar"></i>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        @if (Model.OrderPlacementType == (int)WFP.ICT.Enums.OrderTypeEnum.Manufacturer)
                                                                        {
                                                                            <div class="col-md-6">
                                                                                <div class="form-group form-md-line-input has-success">
                                                                                    <div class="input-icon">
                                                                                        @Html.EditorFor(model => model.CarriedBy, new { htmlAttributes = new { @class = "form-control" } })
                                                                                        <label>Carried By<span class="required">*</span></label>
                                                                                        @Html.ValidationMessageFor(model => model.CarriedBy, null, new { @class = "help-block help-block-error" })
                                                                                        <span class="help-block">Enter Carried By Info</span>
                                                                                        <i class="fa fa-dollar"></i>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                    </div>


                                    <!-- End Services  -->
                                </div>
                            </div>
                        </div>
                        <div class="margin-top-20">
                            <a onclick="pianoConfigs.initFormBegin()" class="btn blue-steel ">Save Order</a>
                            <a onclick="pianoConfigs.initQouteBegin()" class="btn blue-steel ">Send Qoute</a>
                            <a href="/Orders" class="btn c-btn-border-1x c-btn-blue-steel">Cancel</a>
                        </div>
                    </div>




                                                                    }
                <!-- END SAMPLE FORM PORTLET-->
            </div>

        </div>

        <!-- END PAGE BASE CONTENT -->
    </div>
    <!-- END CONTENT BODY -->
</div>
<!-- END CONTENT -->
<script src="~/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js"></script>

<input hidden id="OrderPlacementType" value="@Model.OrderPlacementType "/>

<script type="text/javascript">

    var pianoConfigs = function () {

        handleShowData = function (elem) {
            var pianoTypeSize = $(elem).parent().parent().parent().parent().parent().find('div.pianoTypeContainer');
            var pianoSizeContainer = $(elem).parent().parent().parent().parent().parent().find('div.pianoSizeContainer');

            var pianoBenchPlayer = $(elem).parent().parent().parent().parent().parent().find('div.pianoBenchPlayer');
            var pianoMakeModel = $(elem).parent().parent().parent().parent().parent().find('div.pianoMakeModel');

            if (elem.value == "1") {
                pianoTypeSize.removeClass('ignore').slideDown("fast", function () {
                    pianoSizeContainer.removeClass('ignore').slideDown("fast", function () {

                    });
                    pianoBenchPlayer.removeClass('ignore').slideDown("fast", function () {
                        pianoMakeModel.addClass('ignore').slideUp("fast", function () {

                        });
                    });
                });
            }
            else if (elem.value == "0") {
                pianoMakeModel.removeClass('ignore').slideDown("fast", function () {
                    pianoBenchPlayer.removeClass('ignore').slideDown("fast", function () {
                        pianoSizeContainer.addClass('ignore').slideUp("fast", function () {

                        });
                        pianoTypeSize.addClass('ignore').slideUp("fast", function () {

                        });
                    });
                });
            }
            else if (elem.value == "2") {

                pianoTypeSize.removeClass('ignore').slideDown("fast", function () {
                    pianoSizeContainer.removeClass('ignore').slideDown("fast", function () {

                    });
                    pianoMakeModel.removeClass('ignore').slideDown("fast", function () {
                        pianoBenchPlayer.removeClass('ignore').slideDown("fast", function () {

                        });
                    });
                });
            }
            else {
                pianoBenchPlayer.addClass('ignore').slideUp("fast", function () {
                    pianoMakeModel.addClass('ignore').slideUp("fast", function () {
                        pianoTypeSize.addClass('ignore').slideUp("fast", function () {
                            pianoSizeContainer.addClass('ignore').slideUp("fast", function () {

                            });
                        });
                    });
                });
            }

        }

        handlePopulateWarehouse = function (elem) {

            var parent = $(elem).parent().parent().parent().parent().parent();

            $.post("/Orders/PopulateWarehouseDetails", { warehouseId: elem.value }, function (data) {
                if (data.key) {
                    parent.find('.pianoAddress').val(data.warehouse.address);
                    parent.find('.pianoPhone').val(data.warehouse.phone);
                    parent.find('.pianoState').val(data.warehouse.state);
                    parent.find('.pianoCity').val(data.warehouse.city);
                    parent.find('.pianoStairs').val(data.warehouse.stairs);
                    parent.find('.pianoTurns').val(data.warehouse.turns);
                    parent.find('.pianoName').val(data.warehouse.name);
                    parent.find('.pianoAltName').val(data.warehouse.altName);
                    parent.find('.pianoAltPhone').val(data.warehouse.altPhone);
                    parent.find('.pianoPostCode').val(data.warehouse.postCode);
                }

            });
        }

        handlePopulatePiano = function (event ,elem) {
            
            var parent = $(elem).parent().parent().parent().parent().parent();

            if (event.keyCode == 13) {
                $.post("/Orders/PopulatePiano", { pianoSerialNumber: elem.value }, function (data) {
                    if (data.key) {
                        
                        parent.find('.pianoCategory').val(data.piano.category);
                        parent.find('.pianoCategory').trigger('change');



                        parent.find('.pianoFinish').val(data.piano.finish);


                        parent.find('.pianoModel').val(data.piano.model);

                        setTimeout(function () {
                            parent.find('.pianoMake').val(data.piano.make);
                            parent.find('.pianoMake').trigger('change');
                        }, 500);

                        setTimeout(function () {
                            parent.find('.pianoSize').val(data.piano.size);
                        }, 1000);

                        parent.find('.pianoType').val(data.piano.type);
                        parent.find('.pianoType').trigger('change');


                        parent.find("[check='isBenchRadio'][value ='" + data.piano.isBench + "']").prop('checked', true);
                        parent.find("[check='isPlayerRadio'][value ='" + data.piano.isPlayer + "']").prop('checked', true);
                        parent.find("[check='isBoxedRadio'][value ='" + data.piano.isBoxed + "']").prop('checked', true);
              
                    }
                });
            }
        }

        handlePopulateServiceCharges = function (elem) {
            var parent = $(elem).parent().parent().parent();

            $.post("/Orders/PopulateServiceCharges", { pianoServiceCode: elem.value }, function (data) {

                if (data.key) {
                    parent.find('.serviceCharges').val(data.charges);
                }
            });
        };

        handlePopulateDealerCustomer = function (elem) {
            var parent = $(elem).parent().parent().parent();

            $.post("/Orders/PopulateCustomer", { customerId: elem.value }, function (data) {

                if (data.key) {

                    parent.find('.customerName').val(data.client.name);
                    parent.find('.customerContact').val(data.client.contact);
                    parent.find('.customerAddress').val(data.client.address);

                }
            });
        };



        handleFormBegin = function (data) {

            $('.ignore :input').addClass('ignore');
            
            var type = $('#OrderPlacementType').val();
            type = parseInt(type);

            if ($("#frm").valid()) {
                var formData = new FormData($("#frm").get(0));
                
                if (type == 0) {

                }
                else {
                   
                    var fileUpload = $("#linkFile").get(0).files;

                    if (fileUpload.length > 0) {
                        formData.append(fileUpload[0].name, fileUpload[0]);
                    }
                }


                $.ajax({
                    type: 'POST',
                    url: '/Orders/Save',
                    global: false,
                    data: formData,
                    processData: false,
                    contentType: false,
                    beforeSend: function () {

                    },
                    success: function (data) {
                        pianoConfigs.initFormComplete(data);
                    },
                    complete: function () {

                    },
                });

            }
            else {
              
                var detailError = $('#tab_15_1').find('.input-validation-error').not(".ignore");
                var unitsError = $('#tab_15_2').find('.input-validation-error').not(".ignore");
                var chargesError = $('#tab_15_3').find('.input-validation-error').not(".ignore");
                var billingError = $('#tab_15_4').find('.input-validation-error').not(".ignore");

                var click = true;
                var tabs = '';

                if (detailError.length > 0) {
                    if (click) {
                        $('body .tabbable-line a[href="#tab_15_1"]').trigger('click');
                        click = false;
                    }
                  
                    tabs += 'Details,'
                }
                if (unitsError.length > 0) {
                    if (click) {
                        $('body .tabbable-line a[href="#tab_15_2"]').trigger('click');
                        click = false;
                    }
                   
                    tabs += 'Units,'
                }
                if (chargesError.length > 0) {
              
                    if (click) {
                        $('body .tabbable-line a[href="#tab_15_3"]').trigger('click');
                        click = false;
                    }
                    tabs += 'Charges,'
                }
                if (billingError.length > 0) {
                  
                    if (click) {
                        $('body .tabbable-line a[href="#tab_15_4"]').trigger('click');
                        click = false;
                    }
                    tabs += 'Billing,'
                }

                tabs = tabs.substring(0, tabs.length - 1);

                tabs += ' tabs';

                showToaster({
                    msg: "Please fill the required fields on "+ tabs,
                    priority: 'error'
                });
                return false;
            }

        };


        handleQouteBegin = function () {
            $('.ignore :input').addClass('ignore');
            

            var type = $('#OrderPlacementType').val();
            type = parseInt(type);

            if ($("#frm").valid()) {
                var formData = new FormData($("#frm").get(0));

                if (type == 0) {

                }
                else {

                    var fileUpload = $("#linkFile").get(0).files;

                    if (fileUpload.length > 0) {
                        formData.append(fileUpload[0].name, fileUpload[0]);
                    }
                }


                $.ajax({
                    type: 'POST',
                    url: '/Orders/SendQoute',
                    global: false,
                    data: formData,
                    processData: false,
                    contentType: false,
                    beforeSend: function () {

                    },
                    success: function (data) {
                        if (data.key) {
                            showToaster({
                                msg: "Qoute Sent Successfully",
                                priority: 'success'
                            });
                            $("#frm").get(0).reset();
                        }
                        else {

                            showToaster({
                                msg: "There is an error in service call",
                                priority: 'error'
                            });
                        }
                    },
                    complete: function () {

                    },
                });

            }
            else {

                var detailError = $('#tab_15_1').find('.input-validation-error').not(".ignore");
                var unitsError = $('#tab_15_2').find('.input-validation-error').not(".ignore");
                var chargesError = $('#tab_15_3').find('.input-validation-error').not(".ignore");
                var billingError = $('#tab_15_4').find('.input-validation-error').not(".ignore");

                var click = true;
                var tabs = '';

                if (detailError.length > 0) {
                    if (click) {
                        $('body .tabbable-line a[href="#tab_15_1"]').trigger('click');
                        click = false;
                    }

                    tabs += 'Details,'
                }
                if (unitsError.length > 0) {
                    if (click) {
                        $('body .tabbable-line a[href="#tab_15_2"]').trigger('click');
                        click = false;
                    }

                    tabs += 'Units,'
                }
                if (chargesError.length > 0) {

                    if (click) {
                        $('body .tabbable-line a[href="#tab_15_3"]').trigger('click');
                        click = false;
                    }
                    tabs += 'Charges,'
                }
                if (billingError.length > 0) {

                    if (click) {
                        $('body .tabbable-line a[href="#tab_15_4"]').trigger('click');
                        click = false;
                    }
                    tabs += 'Billing,'
                }

                tabs = tabs.substring(0, tabs.length - 1);

                tabs += ' tabs';

                showToaster({
                    msg: "Please fill the required fields on " + tabs,
                    priority: 'error'
                });
                return false;
            }
        };

        handleFormComplete = function (data) {
            
            if (data.key) {
                $("#frm").get(0).reset();
                window.location.href = '@Url.Action("Index","Orders")';
            }
            else {
                showToaster({
                    msg: "There was an error please try later",
                    priority: 'error'
                });
            }
        };

        handleShowPaymentData = function (elem) {
            if (elem.value == "0") {
                $('.amountDetails').removeClass('ignore').slideDown("fast", function () {
                    $('.staffDetails').addClass('ignore').slideUp("fast", function () {
                        $('.paymentDetails').addClass('ignore').slideUp("fast", function () {

                        });
                    });
                });
            }
            else if (elem.value == "1") {
                $('.staffDetails').removeClass('ignore').slideDown("fast", function () {
                    $('.amountDetails').addClass('ignore').slideUp("fast", function () {
                        $('.paymentDetails').addClass('ignore').slideUp("fast", function () {

                        });
                    });
                });
            }
            else if (elem.value == "2") {

                $('.paymentDetails').removeClass('ignore').slideDown("fast", function () {
                    $('.amountDetails').addClass('ignore').slideUp("fast", function () {
                        $('.staffDetails').addClass('ignore').slideUp("fast", function () {

                        });
                    });
                });
            }
            else {
                $('.paymentDetails').addClass('ignore').slideUp("fast", function () {
                    $('.amountDetails').addClass('ignore').slideUp("fast", function () {
                        $('.staffDetails').addClass('ignore').slideUp("fast", function () {

                        });
                    });
                });
            }
        };

        handleShowSizeList = function (elem) {
            $.post("/Orders/PopulateSelectList", { pianoMake: elem.value }, function (data) {
                if (data.key) {
                    var option = '<option value="">Select Type</option>';
                    if (data.list.length > 0) {
                        $.each(data.list, function (index, value) {
                            option += ' <option value=' + (data.list[index].id) + '>' + (data.list[index].width) + '</option>';
                        });
                        $(elem).parent().parent().parent().parent().find('.pianoSize').html(option);
                        $(elem).parent().parent().parent().parent().find('.pianoSizeContainer').removeClass('ignore').slideDown("fast", function () {
                        });
                    }
                }
            });
        };

        return {

            initShowData: function (elem) {
                handleShowData(elem);
            },
            initPopulateWarehouse: function (elem) {
                handlePopulateWarehouse(elem);
            },
            initPopulatePiano: function (event ,elem) {
                handlePopulatePiano(event,elem);
            },
            initPopulateServiceCharges: function (elem) {
                handlePopulateServiceCharges(elem);
            },
            initFormComplete: function (data) {
                handleFormComplete(data);
            },
            initFormBegin: function () {
                return handleFormBegin();
            },
            initQouteBegin: function () {
                return handleQouteBegin();
            },
            initShowPaymentData: function (data) {
                handleShowPaymentData(data);
            },
            initPopulateDealerCustomer: function (elem) {
                handlePopulateDealerCustomer(elem);
            },
            initShowSizeList: function (elem) {
                handleShowSizeList(elem);
            }

        }
    }();



    $('.date-picker').datetimepicker({
        format: 'M/DD/YYYY hh:mm A'
    });


    $(document).ready(function () {
        $.validator.unobtrusive.parse('form');
        var form = $('#frm').get(0);
        var settings = $.data(form, 'validator').settings;
        settings.ignore = '.ignore';
    });


    $('.pianoCategory').trigger('change');

    $('.pianoType').trigger('change');

    $('.paymentOption').trigger('change');

    $('.pianoMake').trigger('change');


    $('#addPiano').click(function (e) {
        
        $.get('/Orders/NewPiano', function (template) {
            $('#pianoContainer').append(template);

            var form = $("#frm");
            form.removeData("validator");
            form.removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);
            form.validate();
        });

        e.preventDefault();
    });

    $('#addServices').click(function (e) {
        
        $.get('/Orders/NewService', function (template) {
            $('#serviceContainer').append(template);

            var form = $("#frm");
            form.removeData("validator");
            form.removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);
            form.validate();
        });

        e.preventDefault();
    });


</script>

